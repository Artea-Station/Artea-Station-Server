// It may be shitcode, but this is *my* shitcode.

/// ONLY ONE AUTOSET CONTROLLER PER AREA! THEY MUST ALSO BE IN THE SAME AREA AS ALL THEIR COMPONENTS.
/// Also please don't manually set ANY vars on these.
/obj/machinery/airlock_controller/autoset
	// Don't like the autogenerated name? Too bad, use the parent type if it's a dealbreaker.
	name = "autoset airlock controller"
	/// The base tag name to use. Don't touch.
	var/base_tag_name

MAPPING_DIRECTIONAL_HELPERS(/obj/machinery/airlock_controller/autoset, 24)

/obj/machinery/airlock_controller/autoset/Initialize(mapload)
	var/area/area = get_area(src)

	if(area.airlock_controller)
		CRASH("Extra custom airlock controller [src] ([type]) ([COORD(src)]) found in [area] ([area.type]) (original: [area.airlock_controller] ([area.airlock_controller.type]) ([COORD(area.airlock_controller)])! Please fix this!")

	area.airlock_controller = src

	if(!base_tag_name)
		base_tag_name = copytext(REF(area), 4, -1) // Avoid any custom area bullshit breaking stuff, also keeps things simple. Keep it simple, stupid.
		name = "[area.name] Airlock Controller" // Capitalized cause areas use capitalized names themselves.

	id_tag = "custom_airlock_controller_[base_tag_name]"
	exterior_door_tag = "custom_airlock_exterior_[base_tag_name]"
	interior_door_tag = "custom_airlock_interior_[base_tag_name]"
	airpump_tag = "custom_airlock_pump_[base_tag_name]"
	sensor_tag = "custom_airlock_sensor_chamber_[base_tag_name]"
	exterior_sensor_tag = "custom_airlock_sensor_exterior_[base_tag_name]"
	interior_sensor_tag = "custom_airlock_sensor_interior_[base_tag_name]"
	return ..()

/// Used in hallways as a replacement for normal firelocks, where it makes sense.
/obj/machinery/airlock_controller/autoset/hallway
	name = "autoset hallway airlock controller"
	is_firelock = TRUE
	target_state = BULKHEAD_STATE_OPEN

MAPPING_DIRECTIONAL_HELPERS(/obj/machinery/airlock_controller/autoset/hallway, 24)

/// Place in the same area as an autoset airlock controller to link up.
/obj/effect/mapping_helpers/airlock_controller_helper
	name = "use the subtypes"
	layer = DOOR_HELPER_LAYER
	icon = 'icons/effects/airlock_helpers.dmi'
	/// The object to scan for.
	var/affected_type
	/// The base tag name. Used in conjunction with controllers. Optional.
	var/base_tag_name
	/// Should this call in the direction this is oriented instead of on the current tile?
	var/is_step = FALSE

/obj/effect/mapping_helpers/airlock_controller_helper/Initialize(mapload)
	. = ..()
	SSairlocks.helpers_to_initialize += src // Initialized from this subsystem cause ZAS has issues with roundstart open doors.
	return INITIALIZE_HINT_NORMAL

/obj/effect/mapping_helpers/airlock_controller_helper/proc/airlock_initialize()
	var/turf/turf_to_check = loc
	if(is_step)
		turf_to_check = get_step(src, dir)

	var/obj_of_interest = locate(affected_type) in turf_to_check
	if(!obj_of_interest)
		CRASH("[src] failed to find [affected_type] at [AREACOORD(src)]") // Fuck you, map properly.

	if(!base_tag_name)
		base_tag_name = copytext(REF(get_area(src)), 4, -1)

	payload(obj_of_interest)

/// Override in subtypes to do stuff.
/obj/effect/mapping_helpers/airlock_controller_helper/proc/payload(obj/object)
	return

/obj/effect/mapping_helpers/airlock_controller_helper/airlock
	affected_type = /obj/machinery/door/bulkhead

/obj/effect/mapping_helpers/airlock_controller_helper/airlock/interior
	name = "interior airlock"
	icon_state = "doorin"

/obj/effect/mapping_helpers/airlock_controller_helper/airlock/interior/payload(obj/machinery/door/bulkhead/airlock)
	set waitfor = FALSE
	airlock.id_tag = "custom_airlock_interior_[base_tag_name]"
	airlock.set_frequency(FREQ_AIRLOCK_CONTROL)
	airlock.close(TRUE)
	airlock.lock()

/obj/effect/mapping_helpers/airlock_controller_helper/airlock/exterior
	name = "exterior airlock"
	icon_state = "doorout"

/obj/effect/mapping_helpers/airlock_controller_helper/airlock/exterior/payload(obj/machinery/door/bulkhead/airlock)
	set waitfor = FALSE
	airlock.id_tag = "custom_airlock_exterior_[base_tag_name]"
	airlock.set_frequency(FREQ_AIRLOCK_CONTROL)
	airlock.open(TRUE)
	airlock.lock()

/obj/effect/mapping_helpers/airlock_controller_helper/sensor
	affected_type = /obj/machinery/airlock_sensor

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/payload(obj/machinery/airlock_sensor/sensor)
	set waitfor = FALSE
	sensor.frequency = FREQ_AIRLOCK_CONTROL
	sensor.master_tag = "custom_airlock_controller_[base_tag_name]"

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/chamber
	name = "airlock sensor"
	icon_state = "sens"

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/chamber/payload(obj/machinery/airlock_sensor/sensor)
	set waitfor = FALSE
	. = ..()
	sensor.id_tag = "custom_airlock_sensor_chamber_[base_tag_name]"

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/interior
	name = "airlock interior sensor"
	icon_state = "sensin"

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/interior/payload(obj/machinery/airlock_sensor/sensor)
	set waitfor = FALSE
	. = ..()
	sensor.id_tag = "custom_airlock_sensor_interior_[base_tag_name]"

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/interior/step
	is_step = TRUE
	icon_state = "sensin_step"

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/exterior
	name = "airlock exterior sensor"
	icon_state = "sensout"

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/exterior/payload(obj/machinery/airlock_sensor/sensor)
	set waitfor = FALSE
	. = ..()
	sensor.id_tag = "custom_airlock_sensor_exterior_[base_tag_name]"

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/exterior/step
	is_step = TRUE
	icon_state = "sensout_step"

/obj/effect/mapping_helpers/airlock_controller_helper/pump
	name = "airlock pump"
	icon_state = "pump"
	affected_type = /obj/machinery/atmospherics/components/binary/dp_vent_pump

/obj/effect/mapping_helpers/airlock_controller_helper/pump/payload(obj/machinery/atmospherics/components/binary/dp_vent_pump/pump)
	set waitfor = FALSE
	pump.id_tag = "custom_airlock_pump_[base_tag_name]"
	pump.frequency = FREQ_AIRLOCK_CONTROL

/obj/effect/mapping_helpers/airlock_controller_helper/pump/simple
	icon_state = "pumpsingle"
	affected_type = /obj/machinery/atmospherics/components/unary/airlock_vent

