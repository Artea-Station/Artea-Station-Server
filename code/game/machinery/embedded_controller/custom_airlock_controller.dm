// It may be shitcode, but this is *my* shitcode.

/// ONLY ONE AUTOSET CONTROLLER PER AREA! THEY MUST ALSO BE IN THE SAME AREA AS ALL THEIR COMPONENTS.
/// Also please don't manually set ANY vars on these.
/obj/machinery/embedded_controller/radio/airlock_controller/autoset
	// Don't like the autogenerated name? Too bad, use the parent type if it's a dealbreaker.
	name = "autoset airlock controller"
	/// The base tag name to use. Don't touch.
	var/base_tag_name

/obj/machinery/embedded_controller/radio/airlock_controller/autoset/Initialize(mapload)
	var/area/area = get_area(src)

	if(area.airlock_controller)
		CRASH("Extra custom airlock controller [src] ([type]) ([COORD(src)]) found in [area] ([area.type]) (original: [area.airlock_controller] ([area.airlock_controller.type]) ([COORD(area.airlock_controller)])! Please fix this!")

	area.airlock_controller = src

	if(!base_tag_name)
		base_tag_name = REF(area) // Avoid any custom area bullshit breaking stuff, also keeps things simple. Keep it simple, stupid.
		name = "[area.name] Airlock Controller" // Capitalized cause areas use capitalized names themselves.

	id_tag = "custom_airlock_controller_[base_tag_name]"
	exterior_door_tag = "custom_airlock_exterior_[base_tag_name]"
	interior_door_tag = "custom_airlock_interior_[base_tag_name]"
	airpump_tag = "custom_airlock_pump_[base_tag_name]"
	sensor_tag = "custom_airlock_sensor_[base_tag_name]"
	return ..()

/// Place in the same area as an autoset airlock controller to link up.
/obj/effect/mapping_helpers/airlock_controller_helper
	name = "use the subtypes"
	layer = DOOR_HELPER_LAYER
	icon = ''
	/// The object to scan for.
	var/affected_type
	/// The base tag name. Used in conjunction with controllers. Optional.
	var/base_tag_name
	/// The relevant controller.
	var/obj/machinery/embedded_controller/radio/airlock_controller/controller

/obj/effect/mapping_helpers/airlock_controller_helper/Initialize(mapload)
	. = ..()
	if(!base_tag_name)
	var/obj_of_interest = locate(affected_type) in loc
	if(!obj_of_interest)
		CRASH("[src] failed to find [affected_type] at [AREACOORD(src)]") // Fuck you, map properly.

	var/controller = locate(/obj/machinery/embedded_controller/radio/airlock_controller/autoset)

	payload(obj_of_interest)

/// Override in subtypes to do stuff.
/obj/effect/mapping_helpers/airlock_controller_helper/proc/payload(obj/object)
	return

/obj/effect/mapping_helpers/airlock_controller_helper/interior
	name = "interior airlock"
	affected_type = /obj/machinery/door/airlock

/obj/effect/mapping_helpers/airlock_controller_helper/interior/payload(obj/machinery/door/airlock/airlock)
	airlock.id_tag = "custom_airlock_interior_[base_tag_name]"
	airlock.frequency = controller.frequency

/obj/effect/mapping_helpers/airlock_controller_helper/exterior
	name = "exterior airlock"
	affected_type = /obj/machinery/door/airlock

/obj/effect/mapping_helpers/airlock_controller_helper/exterior/payload(obj/machinery/door/airlock/airlock)
	airlock.id_tag = "custom_airlock_exterior_[base_tag_name]"

/obj/effect/mapping_helpers/airlock_controller_helper/sensor
	name = "airlock sensor"
	affected_type = /obj/machinery/airlock_sensor

/obj/effect/mapping_helpers/airlock_controller_helper/sensor/payload(obj/machinery/airlock_sensor/sensor)
	sensor.id_tag = "custom_airlock_sensor_[base_tag_name]"

/obj/effect/mapping_helpers/airlock_controller_helper/pump
	name = "airlock pump"
	affected_type = /obj/machinery/atmospherics/components/binary/dp_vent_pump

/obj/effect/mapping_helpers/airlock_controller_helper/pump/payload(obj/machinery/atmospherics/components/binary/dp_vent_pump/pump)
	pump.id = "custom_airlock_pump_[base_tag_name]"

